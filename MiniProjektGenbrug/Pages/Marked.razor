@page "/marked"
@using Core
@using Services.Interfaces
@inject IProductService _ProductService
@inject NavigationManager navMan
@inject IUserService loginService
@inject IRoomService IRoomService
@inject Blazored.LocalStorage.ILocalStorageService localstorage

<PageTitle>Marked</PageTitle>

<h1>Marked</h1>
@if (_products == null)
{
    <p>Loading your marked...</p>
}
else
{
    <ul>
        @foreach (var article in _products)
        {
            @if (article.Status != "Gennemført")
            {
                <li>
                    <div class="altindhold">
                        <div class="textdiv">
                            @article.id - @article.Description (Størrelse: @article.Size)
                            <span> @article.Price,- DKK</span>
                            <span> Status: @article.Status</span>
                            <span>@IRoomService.GetRoomById(@article.RoomId).Name</span>
                        </div>
                        <div class="DivPic">
                            @article.Picture
                        </div>
                  
                        <button @onclick="() => ReturnProduct(article.id)">Anmod</button>
                        </div>
                </li>
            }
        }
    </ul>
}

@code {

    private Product[] _products;
    private User? currentUser;

    private Dictionary<int, Room> productRoomMap = new();
/* midlertidligt udkommenteret, spørger Umut
    protected override async Task OnInitializedAsync()
    {
        
        currentUser = await localstorage.GetItemAsync<User>("user");
        if (currentUser == null)
        {
            navMan.NavigateTo("login");
        }
        else
        {
            _products = _ProductService.GetProductsById().ToArray();
        }
    }
*/
    private async Task ReturnProduct(int id)
    {
        if (currentUser != null)
        {
            _products = _ProductService.GetProductsById().ToArray(); // Opdatere tøjet
        }
    }
}